cmake_minimum_required(VERSION 3.1)
set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/CMake)

project(heirloom-ports)

option(ENABLE_ZLIB "Enable support for the ZLib compression library in tar" ON)
option(ENABLE_BZ2 "Enable support for the Bzip2 compression library in tar" ON)
option(SHADOW_PASSWORDS "Use shadow for passwords (not PAM)" OFF)
option(ENABLE_HNAMES "Install binaries with an h- prefix so they can be installed alongside usual Unix/GNU equivalents" ON)
option(ENABLE_ILLUMOS "Build certain tools from illumos which have improved functionality but may be larger and less conformant to the classic Unix style" OFF)
option(ENABLE_EXTRAS "Build extra shell scripts that simplify usage" OFF)
option(ENABLE_PAM "Enable Pluggable Authentication Module support (usually yes)" ON)
set(ENABLE_i386 "Enable additional build settings for the i386 (Intel 32-bit) architecture (always use if building on i386, do not use otherwise)" OFF)
set(USRSHAREDIR "${CMAKE_INSTALL_PREFIX}/usr/share" CACHE STRING "Where files intended for /usr/share should be put")
set(ETCDIR "${CMAKE_INSTALL_PREFIX}/etc" CACHE STRING "Where files intended for /etc should be put (mostly global configuration files)")
set(NEWSDIR "${CMAKE_INSTALL_PREFIX}/var/news" CACHE STRING "Where news should be placed and read from by the news program (usually /var/news)")
set(TMPDIR "${CMAKE_INSTALL_PREFIX}/var/tmp" CACHE STRING "Where temporary files should be stored by built programs (usually /var/tmp or /tmp)")
set(SPELLING "BOTH" CACHE STRING "Set to UK, US, or BOTH based on the target for the spell program. If you select BOTH, the executables `spell-uk` and `spell-us` will be built. Any other value will cause spell to not be built at all.")

find_package(RPC REQUIRED)
find_package(Curses REQUIRED)
if(TAR_ENABLE_ZLIB) 
    find_package(ZLIB REQUIRED)
endif()
if(TAR_ENABLE_BZ2)
    find_package(BZip2 REQUIRED)
endif()
find_library(
    LIBTINFO 
    NAMES libtinfo.so libtinfo.so.5 libtinfo.so.6 libtinfo.so.6.2
    HINTS /lib64 /usr/lib64 /lib /usr/lib  
)

if(ENABLE_i386)
    add_compile_definitions(HEIRLOOM_32BIT)
endif()

# temporary paths so host system doesn't get screwed up
set(USRSHAREDIR /home/lyndsay/code/heirloom-ports/_INST/pub)
set(ETCDIR /home/lyndsay/code/heirloom-ports/_INST/cfg)
set(NEWSDIR /home/lyndsay/code/heirloom-ports/_INST/news)
set(CMAKE_INSTALL_BINDIR /home/lyndsay/code/heirloom-ports/_INST/bin)
set(CMAKE_INSTALL_INCLUDEDIR /home/lyndsay/code/heirloom-ports/_INST/inc)
set(CMAKE_INSTALL_LIBDIR /home/lyndsay/code/heirloom-ports/_INST/lib)

# build libraries first so we can link the executables against them
add_subdirectory(libuxre)
add_subdirectory(libheirloom)
add_subdirectory(libwchar)
add_subdirectory(libavl)

# build devtools
add_subdirectory(ar)
#add_subdirectory(ld)
add_subdirectory(lex)
add_subdirectory(m4)
add_subdirectory(make)
add_subdirectory(yacc)
#add_subdirectory(lint) # lint depends on heirloom yacc so we have to build it after
add_subdirectory(sccs)

# build toolchest
add_subdirectory(banner)
add_subdirectory(basename)
add_subdirectory(bc)
add_subdirectory(bdiff)
add_subdirectory(bfs)
add_subdirectory(cal)
add_subdirectory(cat)
add_subdirectory(checknr)
add_subdirectory(chmod)
add_subdirectory(chown)
add_subdirectory(cksum)
add_subdirectory(cmp)
add_subdirectory(col)
add_subdirectory(comm)
add_subdirectory(cp)
#add_subdirectory(cpio)
add_subdirectory(csplit)
add_subdirectory(cut)
add_subdirectory(date)
add_subdirectory(dc)
add_subdirectory(dd)
add_subdirectory(deroff)
add_subdirectory(df)
#add_subdirectory(diff)
add_subdirectory(diff3)
add_subdirectory(dircmp)
add_subdirectory(dirname)
add_subdirectory(du)
add_subdirectory(echo)
add_subdirectory(ed)
add_subdirectory(env)
add_subdirectory(ex)
add_subdirectory(expand)
#add_subdirectory(expr)
add_subdirectory(factor)
add_subdirectory(file)
add_subdirectory(find)
add_subdirectory(fmt)
add_subdirectory(grep)
add_subdirectory(groups)
add_subdirectory(head)
add_subdirectory(hostname)
add_subdirectory(id)
add_subdirectory(kill)
add_subdirectory(listusers)
add_subdirectory(mesg)
add_subdirectory(mkdir)
add_subdirectory(more)
add_subdirectory(news)
add_subdirectory(nice)
add_subdirectory(od)
add_subdirectory(printf)
add_subdirectory(ps)
add_subdirectory(pwd)
add_subdirectory(random)
add_subdirectory(rm)
add_subdirectory(sed)
#add_subdirectory(awk) # we use a couple programs from above to process code for this one which is why it comes here
add_subdirectory(sh)
add_subdirectory(sleep)
add_subdirectory(sort)
add_subdirectory(stty)
add_subdirectory(su)
add_subdirectory(tail)
add_subdirectory(tar)
add_subdirectory(tee)
add_subdirectory(test)
add_subdirectory(touch)
add_subdirectory(tr)
add_subdirectory(true)
add_subdirectory(tty)
add_subdirectory(ul)
add_subdirectory(uname)
add_subdirectory(users)
add_subdirectory(wc)
#add_subdirectory(spell) # spell needs wc
add_subdirectory(what)
add_subdirectory(who)
add_subdirectory(yes)

if(ENABLE_EXTRAS)
    add_subdirectory(extras)
endif()